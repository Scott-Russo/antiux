{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ForumPostsComponent = class ForumPostsComponent {\n  constructor(forumService) {\n    this.forumService = forumService;\n    this.startIndex = 0;\n    this.itemsPerPage = 5;\n    this.buttonOneName = 'Next Page';\n    this.buttonTwoName = 'First Page';\n    this.randomizedForums = shuffle(forumService.getForums());\n    this.currentForums = this.updateCurrentForums();\n  }\n  updateCurrentForums() {\n    return this.randomizedForums.slice(this.startIndex, this.startIndex + this.itemsPerPage);\n  }\n  clickedButtonOne() {\n    if (this.buttonOneName == 'Next Page') {\n      this.nextPage();\n    } else {\n      this.goFirstPage();\n    }\n    this.swapStrings();\n  }\n  clickedButtonTwo() {\n    if (this.buttonTwoName == 'Next Page') {\n      this.nextPage();\n    } else {\n      this.goFirstPage();\n    }\n    this.swapStrings();\n  }\n  goFirstPage() {\n    this.startIndex = 0;\n    this.currentForums = this.updateCurrentForums();\n  }\n  nextPage() {\n    //assigns either to i + 5 or 0,\n    this.startIndex = this.startIndex + this.itemsPerPage <= this.randomizedForums.length ? this.startIndex + this.itemsPerPage : 0;\n    this.currentForums = this.updateCurrentForums();\n  }\n  swapStrings() {\n    if (Math.random() > 0.7) {\n      [this.buttonOneName, this.buttonTwoName] = [this.buttonTwoName, this.buttonOneName];\n    }\n  }\n};\nForumPostsComponent = __decorate([Component({\n  selector: 'app-forum-posts',\n  templateUrl: './forum-posts.component.html',\n  styleUrls: ['./forum-posts.component.css']\n})], ForumPostsComponent);\n//took this from stackoverflow, implementation of fisher yates\nconst shuffle = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};","map":{"version":3,"names":["Component","ForumPostsComponent","constructor","forumService","startIndex","itemsPerPage","buttonOneName","buttonTwoName","randomizedForums","shuffle","getForums","currentForums","updateCurrentForums","slice","clickedButtonOne","nextPage","goFirstPage","swapStrings","clickedButtonTwo","length","Math","random","__decorate","selector","templateUrl","styleUrls","array","i","j","floor"],"sources":["C:\\Users\\sprsj\\Documents\\GitHub\\antiux\\anti-ux\\src\\app\\forum-posts\\forum-posts.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ForumService } from '../forum.service';\r\n\r\ntype buttonType = 'Next Page' | 'First Page';\r\n\r\n@Component({\r\n  selector: 'app-forum-posts',\r\n  templateUrl: './forum-posts.component.html',\r\n  styleUrls: ['./forum-posts.component.css']\r\n})\r\nexport class ForumPostsComponent {\r\n  public randomizedForums: string[];\r\n  public currentForums: string[];\r\n\r\n  public startIndex = 0;\r\n  public itemsPerPage = 5;\r\n\r\n  public buttonOneName: buttonType = 'Next Page';\r\n  public buttonTwoName: buttonType = 'First Page';\r\n\r\n  constructor(public forumService: ForumService){\r\n    this.randomizedForums = shuffle(forumService.getForums());\r\n\r\n    this.currentForums = this.updateCurrentForums();\r\n  }\r\n\r\n  updateCurrentForums(): string[] {\r\n    return this.randomizedForums.slice(this.startIndex, this.startIndex + this.itemsPerPage);\r\n  }\r\n\r\n  clickedButtonOne(): void {\r\n    if(this.buttonOneName == 'Next Page'){\r\n      this.nextPage();\r\n    }\r\n    else{\r\n      this.goFirstPage();\r\n    }\r\n    this.swapStrings();\r\n  }\r\n\r\n  clickedButtonTwo(): void{\r\n    if(this.buttonTwoName == 'Next Page'){\r\n      this.nextPage();\r\n    }\r\n    else{\r\n      this.goFirstPage();\r\n    }\r\n    this.swapStrings();\r\n  }\r\n\r\n  goFirstPage(): void{\r\n    this.startIndex = 0;\r\n    this.currentForums = this.updateCurrentForums();\r\n  }\r\n  \r\n  nextPage(): void {\r\n    //assigns either to i + 5 or 0,\r\n    this.startIndex = (this.startIndex + this.itemsPerPage <= this.randomizedForums.length ? this.startIndex + this.itemsPerPage : 0);\r\n    this.currentForums = this.updateCurrentForums();\r\n  }\r\n\r\n  swapStrings(): void {\r\n    if(Math.random() > 0.7){\r\n      [this.buttonOneName, this.buttonTwoName] = [this.buttonTwoName, this.buttonOneName];\r\n    }\r\n  }\r\n}\r\n\r\n//took this from stackoverflow, implementation of fisher yates\r\nconst shuffle = (array: string[]) => { \r\n  for (let i = array.length - 1; i > 0; i--) { \r\n    const j = Math.floor(Math.random() * (i + 1)); \r\n    [array[i], array[j]] = [array[j], array[i]]; \r\n  } \r\n  return array; \r\n}; \r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAU9BC,YAAmBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IANxB,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,YAAY,GAAG,CAAC;IAEhB,KAAAC,aAAa,GAAe,WAAW;IACvC,KAAAC,aAAa,GAAe,YAAY;IAG7C,IAAI,CAACC,gBAAgB,GAAGC,OAAO,CAACN,YAAY,CAACO,SAAS,EAAE,CAAC;IAEzD,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,mBAAmB,EAAE;EACjD;EAEAA,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACJ,gBAAgB,CAACK,KAAK,CAAC,IAAI,CAACT,UAAU,EAAE,IAAI,CAACA,UAAU,GAAG,IAAI,CAACC,YAAY,CAAC;EAC1F;EAEAS,gBAAgBA,CAAA;IACd,IAAG,IAAI,CAACR,aAAa,IAAI,WAAW,EAAC;MACnC,IAAI,CAACS,QAAQ,EAAE;KAChB,MACG;MACF,IAAI,CAACC,WAAW,EAAE;;IAEpB,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,gBAAgBA,CAAA;IACd,IAAG,IAAI,CAACX,aAAa,IAAI,WAAW,EAAC;MACnC,IAAI,CAACQ,QAAQ,EAAE;KAChB,MACG;MACF,IAAI,CAACC,WAAW,EAAE;;IAEpB,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAD,WAAWA,CAAA;IACT,IAAI,CAACZ,UAAU,GAAG,CAAC;IACnB,IAAI,CAACO,aAAa,GAAG,IAAI,CAACC,mBAAmB,EAAE;EACjD;EAEAG,QAAQA,CAAA;IACN;IACA,IAAI,CAACX,UAAU,GAAI,IAAI,CAACA,UAAU,GAAG,IAAI,CAACC,YAAY,IAAI,IAAI,CAACG,gBAAgB,CAACW,MAAM,GAAG,IAAI,CAACf,UAAU,GAAG,IAAI,CAACC,YAAY,GAAG,CAAE;IACjI,IAAI,CAACM,aAAa,GAAG,IAAI,CAACC,mBAAmB,EAAE;EACjD;EAEAK,WAAWA,CAAA;IACT,IAAGG,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,EAAC;MACrB,CAAC,IAAI,CAACf,aAAa,EAAE,IAAI,CAACC,aAAa,CAAC,GAAG,CAAC,IAAI,CAACA,aAAa,EAAE,IAAI,CAACD,aAAa,CAAC;;EAEvF;CACD;AAxDYL,mBAAmB,GAAAqB,UAAA,EAL/BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWxB,mBAAmB,CAwD/B;AAED;AACA,MAAMQ,OAAO,GAAIiB,KAAe,IAAI;EAClC,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACP,MAAM,GAAG,CAAC,EAAEQ,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACzC,MAAMC,CAAC,GAAGR,IAAI,CAACS,KAAK,CAACT,IAAI,CAACC,MAAM,EAAE,IAAIM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACE,CAAC,CAAC,CAAC,GAAG,CAACF,KAAK,CAACE,CAAC,CAAC,EAAEF,KAAK,CAACC,CAAC,CAAC,CAAC;;EAE7C,OAAOD,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}