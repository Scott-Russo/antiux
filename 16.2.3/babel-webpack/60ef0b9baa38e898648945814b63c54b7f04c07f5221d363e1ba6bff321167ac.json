{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let PostingComponent = class PostingComponent {\n  constructor(route, formBuilder, router) {\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.forumName = '';\n    this.errorMessage = '';\n    this.postForm = this.formBuilder.group({\n      postContent: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.forumName = params['forumName'];\n    });\n  }\n  submitPost() {\n    const postContentString = this.postForm.get('postContent')?.value();\n    if (this.checkPostContent(postContentString)) {\n      this.router.navigate(['/confirm-human']);\n    }\n  }\n  checkPostContent(postContent) {\n    this.errorMessage = postContent;\n    return false;\n  }\n};\nPostingComponent = __decorate([Component({\n  selector: 'app-posting',\n  templateUrl: './posting.component.html',\n  styleUrls: ['./posting.component.css']\n})], PostingComponent);","map":{"version":3,"names":["Component","Validators","PostingComponent","constructor","route","formBuilder","router","forumName","errorMessage","postForm","group","postContent","required","ngOnInit","params","subscribe","submitPost","postContentString","get","value","checkPostContent","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\sprsj\\Documents\\GitHub\\antiux\\anti-ux\\src\\app\\posting\\posting.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-posting',\r\n  templateUrl: './posting.component.html',\r\n  styleUrls: ['./posting.component.css']\r\n})\r\nexport class PostingComponent {\r\n  forumName: string = '';\r\n  errorMessage: string = '';\r\n  postForm: FormGroup;\r\n\r\n  constructor(private route: ActivatedRoute, private formBuilder: FormBuilder, private router: Router){\r\n    this.postForm = this.formBuilder.group({\r\n      postContent: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit():void {\r\n    this.route.params.subscribe(params => {\r\n      this.forumName = params['forumName']\r\n    });\r\n  }\r\n\r\n  submitPost(): void{\r\n    const postContentString = this.postForm.get('postContent')?.value();\r\n\r\n    if(this.checkPostContent(postContentString)){\r\n      this.router.navigate(['/confirm-human']);\r\n    }\r\n    \r\n  }\r\n  \r\n  checkPostContent(postContent: string): boolean {\r\n    this.errorMessage = postContent;\r\n    \r\n\r\n    return false;\r\n  }\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,KAAqB,EAAUC,WAAwB,EAAUC,MAAc;IAA/E,KAAAF,KAAK,GAALA,KAAK;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAJ3F,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,YAAY,GAAW,EAAE;IAIvB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACrCC,WAAW,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ;KACtC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACT,KAAK,CAACU,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACP,SAAS,GAAGO,MAAM,CAAC,WAAW,CAAC;IACtC,CAAC,CAAC;EACJ;EAEAE,UAAUA,CAAA;IACR,MAAMC,iBAAiB,GAAG,IAAI,CAACR,QAAQ,CAACS,GAAG,CAAC,aAAa,CAAC,EAAEC,KAAK,EAAE;IAEnE,IAAG,IAAI,CAACC,gBAAgB,CAACH,iBAAiB,CAAC,EAAC;MAC1C,IAAI,CAACX,MAAM,CAACe,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;;EAG5C;EAEAD,gBAAgBA,CAACT,WAAmB;IAClC,IAAI,CAACH,YAAY,GAAGG,WAAW;IAG/B,OAAO,KAAK;EACd;CACD;AAhCYT,gBAAgB,GAAAoB,UAAA,EAL5BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWvB,gBAAgB,CAgC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}