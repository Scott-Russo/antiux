{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction PostingComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class PostingComponent {\n  constructor(route, formBuilder, router) {\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.forumName = '';\n    this.errorMessage = '';\n    this.postForm = this.formBuilder.group({\n      postContent: ['', Validators.required]\n    });\n    this.postButton = 'Post';\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.forumName = params['forumName'];\n    });\n  }\n  submitPost() {\n    if (this.errorMessage == 'To Post, Wait 5 seconds then click Post') {}\n    const postContentString = this.postForm.get('postContent')?.value;\n    if (this.checkPostContent(postContentString)) {\n      this.errorMessage = 'To Post, Wait 5 seconds then click Post';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 5000);\n      this.errorMessage = 'Ok, post now!';\n    }\n    setTimeout(() => {\n      this.errorMessage = '';\n    }, 3000);\n  }\n  checkPostContent(postContent) {\n    //not long enough 30 words\n    if (!this.enoughSpaces(postContent, 30)) {\n      this.errorMessage = 'not enough words';\n      return false;\n    }\n    //check 3 periods and 3 capital letters\n    else if (!this.enoughCapitalsAndPeriods(postContent)) {\n      this.errorMessage = 'not enough complete sentences';\n      return false;\n    }\n    //too many words 45\n    else if (!this.tooManySpaces(postContent, 45)) {\n      this.errorMessage = 'too many words';\n      return false;\n    }\n    //no signature hyphen check\n    else if (!this.containsHyphen(postContent)) {\n      this.errorMessage = 'make sure you sign with a hyphen';\n      return false;\n    }\n    //not on topic (contains forum name)\n    else if (!this.isOnTopic(postContent)) {\n      this.errorMessage = 'make sure your post is on topic (contains forum title)';\n      return false;\n    } else return true;\n  }\n  enoughSpaces(postContent, numSpaces) {\n    const spaces = postContent.match(/ /g);\n    if (!spaces) return false;else if (spaces?.length < numSpaces) return false;else return true;\n  }\n  enoughCapitalsAndPeriods(postContent) {\n    const numUpper = postContent.length - postContent.replace(/[A-Z]/g, '').length;\n    const numPeriods = postContent.length - postContent.replace(/[.]/g, '').length;\n    if (numUpper < 5 || numPeriods < 5) return false;else return true;\n  }\n  tooManySpaces(postContent, numSpaces) {\n    const spaces = postContent.match(/ /g);\n    if (!spaces) return false;else if (spaces?.length > numSpaces) return false;else return true;\n  }\n  containsHyphen(postContent) {\n    if (!postContent.includes('-')) return false;else return true;\n  }\n  isOnTopic(postContent) {\n    if (!postContent.includes(this.forumName)) return false;else return true;\n  }\n  reallySureCheck() {}\n}\n_class = PostingComponent;\n_class.ɵfac = function PostingComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-posting\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"background\"], [1, \"content\"], [1, \"Title\"], [\"class\", \"error-message\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"postContent\"], [\"formControlName\", \"postContent\", \"id\", \"postContent\", \"name\", \"postContent\", \"required\", \"\"], [\"type\", \"submit\"], [1, \"error-message\"]],\n  template: function PostingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"body\")(2, \"div\", 1)(3, \"p\", 2);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, PostingComponent_p_5_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelementStart(6, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function PostingComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.submitPost();\n      });\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Post Content:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"textarea\", 6);\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Post\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Welcome to \", ctx.forumName, \" forum!\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".background[_ngcontent-%COMP%] {\\n    background-color: blue;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n    display: flex;\\n    white-space: pre-line;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    margin: 0;\\n}\\n\\n.error-message[_ngcontent-%COMP%]{\\n    color: navy;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n    text-align: center;\\n}\\n\\n.button[_ngcontent-%COMP%] {\\n    padding: 10px 20px;\\n    background-color: #007BFF;\\n    color: #fff;\\n    border: none;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdGluZy9wb3N0aW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLFNBQVM7QUFDYjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsV0FBVztJQUNYLFlBQVk7SUFDWixlQUFlO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLmJhY2tncm91bmQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgd2hpdGUtc3BhY2U6IHByZS1saW5lO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuLmVycm9yLW1lc3NhZ2V7XHJcbiAgICBjb2xvcjogbmF2eTtcclxufVxyXG5cclxuLmNvbnRlbnQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdCRkY7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","PostingComponent","constructor","route","formBuilder","router","forumName","postForm","group","postContent","required","postButton","ngOnInit","params","subscribe","submitPost","postContentString","get","value","checkPostContent","setTimeout","enoughSpaces","enoughCapitalsAndPeriods","tooManySpaces","containsHyphen","isOnTopic","numSpaces","spaces","match","length","numUpper","replace","numPeriods","includes","reallySureCheck","ɵɵdirectiveInject","i1","ActivatedRoute","i2","FormBuilder","Router","selectors","decls","vars","consts","template","PostingComponent_Template","rf","ctx","ɵɵtemplate","PostingComponent_p_5_Template","ɵɵlistener","PostingComponent_Template_form_ngSubmit_6_listener","ɵɵelement","ɵɵtextInterpolate1","ɵɵproperty"],"sources":["C:\\Users\\sprsj\\Documents\\GitHub\\antiux\\anti-ux\\src\\app\\posting\\posting.component.ts","C:\\Users\\sprsj\\Documents\\GitHub\\antiux\\anti-ux\\src\\app\\posting\\posting.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-posting',\r\n  templateUrl: './posting.component.html',\r\n  styleUrls: ['./posting.component.css']\r\n})\r\nexport class PostingComponent {\r\n  forumName: string = '';\r\n  errorMessage: string = '';\r\n  postForm: FormGroup;\r\n  postButton: string;\r\n\r\n  constructor(private route: ActivatedRoute, private formBuilder: FormBuilder, private router: Router){\r\n    this.postForm = this.formBuilder.group({\r\n      postContent: ['', Validators.required]\r\n    });\r\n    this.postButton = 'Post';\r\n  }\r\n\r\n  ngOnInit():void {\r\n    this.route.params.subscribe(params => {\r\n      this.forumName = params['forumName']\r\n    });\r\n  }\r\n\r\n  submitPost(): void{\r\n    if(this.errorMessage == 'To Post, Wait 5 seconds then click Post'){\r\n      \r\n    }\r\n\r\n    const postContentString: string = this.postForm.get('postContent')?.value;\r\n\r\n    if(this.checkPostContent(postContentString)){\r\n      this.errorMessage = 'To Post, Wait 5 seconds then click Post';\r\n\r\n      setTimeout(() => {this.errorMessage = '';}, 5000);\r\n      this.errorMessage = 'Ok, post now!';\r\n    }\r\n\r\n    setTimeout(() => {this.errorMessage = '';}, 3000);\r\n  }\r\n  \r\n  checkPostContent(postContent: string): boolean {\r\n    //not long enough 30 words\r\n    if(!this.enoughSpaces(postContent, 30)){\r\n      this.errorMessage = 'not enough words';\r\n      return false;\r\n    }\r\n    \r\n    //check 3 periods and 3 capital letters\r\n    else if(!this.enoughCapitalsAndPeriods(postContent)){\r\n      this.errorMessage = 'not enough complete sentences';\r\n      return false;\r\n    }\r\n\r\n    //too many words 45\r\n    else if(!this.tooManySpaces(postContent, 45)){\r\n      this.errorMessage = 'too many words';\r\n      return false;\r\n    }\r\n\r\n    //no signature hyphen check\r\n    else if (!this.containsHyphen(postContent)){\r\n      this.errorMessage = 'make sure you sign with a hyphen';\r\n      return false;\r\n    }\r\n    \r\n    //not on topic (contains forum name)\r\n    else if (!this.isOnTopic(postContent)){\r\n      this.errorMessage = 'make sure your post is on topic (contains forum title)';\r\n      return false;\r\n    }\r\n\r\n    else return true;\r\n  }\r\n\r\n  enoughSpaces(postContent: string, numSpaces: number): boolean{\r\n    const spaces = postContent.match(/ /g);\r\n\r\n    if(!spaces) return false;\r\n    else if(spaces?.length < numSpaces) return false;\r\n    else return true;\r\n  }\r\n\r\n  enoughCapitalsAndPeriods(postContent: string): boolean{\r\n    const numUpper = postContent.length - postContent.replace(/[A-Z]/g, '').length;\r\n    const numPeriods = postContent.length - postContent.replace(/[.]/g, '').length;\r\n\r\n    if(numUpper< 5 || numPeriods < 5) return false;\r\n    else return true;\r\n  }\r\n\r\n  tooManySpaces(postContent: string, numSpaces: number): boolean{\r\n    const spaces = postContent.match(/ /g);\r\n\r\n    if(!spaces) return false;\r\n    else if(spaces?.length > numSpaces) return false;\r\n    else return true;\r\n  }\r\n\r\n  containsHyphen(postContent: string): boolean{\r\n    if(!postContent.includes('-')) return false;\r\n    else return true;\r\n  }\r\n\r\n  isOnTopic(postContent: string): boolean {\r\n    if(!postContent.includes(this.forumName)) return false;\r\n    else return true;\r\n  }\r\n\r\n  reallySureCheck(){\r\n\r\n  }\r\n}","<div class=\"background\">\r\n    <body>\r\n        <div class=\"content\">\r\n            <p class=\"Title\">Welcome to {{forumName}} forum!</p>\r\n            <p class=\"error-message\" *ngIf=\"errorMessage\">{{errorMessage}}</p>\r\n        \r\n        \r\n            <form [formGroup]=\"postForm\" (ngSubmit)=\"submitPost()\">\r\n                <label for=\"postContent\">Post Content:</label>\r\n                <textarea formControlName=\"postContent\" id=\"postContent\" name=\"postContent\" required></textarea>\r\n\r\n                <button type=\"submit\">Post</button>\r\n            </form>\r\n        </div>\r\n    </body>\r\n</div>\r\n"],"mappings":";AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICEvDC,EAAA,CAAAC,cAAA,WAA8C;IAAAD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAApBH,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,YAAA,CAAgB;;;ADM1E,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,KAAqB,EAAUC,WAAwB,EAAUC,MAAc;IAA/E,KAAAF,KAAK,GAALA,KAAK;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAL3F,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAN,YAAY,GAAW,EAAE;IAKvB,IAAI,CAACO,QAAQ,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACrCC,WAAW,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACkB,QAAQ;KACtC,CAAC;IACF,IAAI,CAACC,UAAU,GAAG,MAAM;EAC1B;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACT,KAAK,CAACU,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACP,SAAS,GAAGO,MAAM,CAAC,WAAW,CAAC;IACtC,CAAC,CAAC;EACJ;EAEAE,UAAUA,CAAA;IACR,IAAG,IAAI,CAACf,YAAY,IAAI,yCAAyC,EAAC,C;IAIlE,MAAMgB,iBAAiB,GAAW,IAAI,CAACT,QAAQ,CAACU,GAAG,CAAC,aAAa,CAAC,EAAEC,KAAK;IAEzE,IAAG,IAAI,CAACC,gBAAgB,CAACH,iBAAiB,CAAC,EAAC;MAC1C,IAAI,CAAChB,YAAY,GAAG,yCAAyC;MAE7DoB,UAAU,CAAC,MAAK;QAAE,IAAI,CAACpB,YAAY,GAAG,EAAE;MAAC,CAAC,EAAE,IAAI,CAAC;MACjD,IAAI,CAACA,YAAY,GAAG,eAAe;;IAGrCoB,UAAU,CAAC,MAAK;MAAE,IAAI,CAACpB,YAAY,GAAG,EAAE;IAAC,CAAC,EAAE,IAAI,CAAC;EACnD;EAEAmB,gBAAgBA,CAACV,WAAmB;IAClC;IACA,IAAG,CAAC,IAAI,CAACY,YAAY,CAACZ,WAAW,EAAE,EAAE,CAAC,EAAC;MACrC,IAAI,CAACT,YAAY,GAAG,kBAAkB;MACtC,OAAO,KAAK;;IAGd;IAAA,KACK,IAAG,CAAC,IAAI,CAACsB,wBAAwB,CAACb,WAAW,CAAC,EAAC;MAClD,IAAI,CAACT,YAAY,GAAG,+BAA+B;MACnD,OAAO,KAAK;;IAGd;IAAA,KACK,IAAG,CAAC,IAAI,CAACuB,aAAa,CAACd,WAAW,EAAE,EAAE,CAAC,EAAC;MAC3C,IAAI,CAACT,YAAY,GAAG,gBAAgB;MACpC,OAAO,KAAK;;IAGd;IAAA,KACK,IAAI,CAAC,IAAI,CAACwB,cAAc,CAACf,WAAW,CAAC,EAAC;MACzC,IAAI,CAACT,YAAY,GAAG,kCAAkC;MACtD,OAAO,KAAK;;IAGd;IAAA,KACK,IAAI,CAAC,IAAI,CAACyB,SAAS,CAAChB,WAAW,CAAC,EAAC;MACpC,IAAI,CAACT,YAAY,GAAG,wDAAwD;MAC5E,OAAO,KAAK;KACb,MAEI,OAAO,IAAI;EAClB;EAEAqB,YAAYA,CAACZ,WAAmB,EAAEiB,SAAiB;IACjD,MAAMC,MAAM,GAAGlB,WAAW,CAACmB,KAAK,CAAC,IAAI,CAAC;IAEtC,IAAG,CAACD,MAAM,EAAE,OAAO,KAAK,CAAC,KACpB,IAAGA,MAAM,EAAEE,MAAM,GAAGH,SAAS,EAAE,OAAO,KAAK,CAAC,KAC5C,OAAO,IAAI;EAClB;EAEAJ,wBAAwBA,CAACb,WAAmB;IAC1C,MAAMqB,QAAQ,GAAGrB,WAAW,CAACoB,MAAM,GAAGpB,WAAW,CAACsB,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACF,MAAM;IAC9E,MAAMG,UAAU,GAAGvB,WAAW,CAACoB,MAAM,GAAGpB,WAAW,CAACsB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACF,MAAM;IAE9E,IAAGC,QAAQ,GAAE,CAAC,IAAIE,UAAU,GAAG,CAAC,EAAE,OAAO,KAAK,CAAC,KAC1C,OAAO,IAAI;EAClB;EAEAT,aAAaA,CAACd,WAAmB,EAAEiB,SAAiB;IAClD,MAAMC,MAAM,GAAGlB,WAAW,CAACmB,KAAK,CAAC,IAAI,CAAC;IAEtC,IAAG,CAACD,MAAM,EAAE,OAAO,KAAK,CAAC,KACpB,IAAGA,MAAM,EAAEE,MAAM,GAAGH,SAAS,EAAE,OAAO,KAAK,CAAC,KAC5C,OAAO,IAAI;EAClB;EAEAF,cAAcA,CAACf,WAAmB;IAChC,IAAG,CAACA,WAAW,CAACwB,QAAQ,CAAC,GAAG,CAAC,EAAE,OAAO,KAAK,CAAC,KACvC,OAAO,IAAI;EAClB;EAEAR,SAASA,CAAChB,WAAmB;IAC3B,IAAG,CAACA,WAAW,CAACwB,QAAQ,CAAC,IAAI,CAAC3B,SAAS,CAAC,EAAE,OAAO,KAAK,CAAC,KAClD,OAAO,IAAI;EAClB;EAEA4B,eAAeA,CAAA,GAEf;;SA1GWjC,gBAAgB;;mBAAhBA,MAAgB,EAAAR,EAAA,CAAA0C,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA5C,EAAA,CAAA0C,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAA9C,EAAA,CAAA0C,iBAAA,CAAAC,EAAA,CAAAI,MAAA;AAAA;;QAAhBvC,MAAgB;EAAAwC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV7BtD,EAAA,CAAAC,cAAA,aAAwB;MAGKD,EAAA,CAAAE,MAAA,GAA+B;MAAAF,EAAA,CAAAG,YAAA,EAAI;MACpDH,EAAA,CAAAwD,UAAA,IAAAC,6BAAA,eAAkE;MAGlEzD,EAAA,CAAAC,cAAA,cAAuD;MAA1BD,EAAA,CAAA0D,UAAA,sBAAAC,mDAAA;QAAA,OAAYJ,GAAA,CAAAjC,UAAA,EAAY;MAAA,EAAC;MAClDtB,EAAA,CAAAC,cAAA,eAAyB;MAAAD,EAAA,CAAAE,MAAA,oBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAC9CH,EAAA,CAAA4D,SAAA,kBAAgG;MAEhG5D,EAAA,CAAAC,cAAA,iBAAsB;MAAAD,EAAA,CAAAE,MAAA,YAAI;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MARtBH,EAAA,CAAAI,SAAA,GAA+B;MAA/BJ,EAAA,CAAA6D,kBAAA,gBAAAN,GAAA,CAAA1C,SAAA,YAA+B;MACtBb,EAAA,CAAAI,SAAA,GAAkB;MAAlBJ,EAAA,CAAA8D,UAAA,SAAAP,GAAA,CAAAhD,YAAA,CAAkB;MAGtCP,EAAA,CAAAI,SAAA,GAAsB;MAAtBJ,EAAA,CAAA8D,UAAA,cAAAP,GAAA,CAAAzC,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}